source('~/Dropbox/Studium/Master/EBS/car2x/exercise/omnet/veins/examples/flooding/results/r_script.R')
source('~/Dropbox/Studium/Master/EBS/car2x/exercise/omnet/veins/examples/flooding/results/r_script.R')
source('~/Dropbox/Studium/Master/EBS/car2x/exercise/omnet/veins/examples/flooding/results/r_script.R')
source('~/Dropbox/Studium/Master/EBS/car2x/exercise/omnet/veins/examples/flooding/results/r_script.R')
source('~/Dropbox/Studium/Master/EBS/car2x/exercise/omnet/veins/examples/flooding/results/r_script.R')
source('~/Dropbox/Studium/Master/EBS/car2x/exercise/omnet/veins/examples/flooding/results/r_script.R')
source('~/Dropbox/Studium/Master/EBS/car2x/exercise/omnet/veins/examples/flooding/results/r_script.R')
source('~/Dropbox/Studium/Master/EBS/car2x/exercise/omnet/veins/examples/flooding/results/r_script.R')
source('~/Dropbox/Studium/Master/EBS/car2x/exercise/omnet/veins/examples/flooding/results/r_script.R')
source('~/Dropbox/Studium/Master/EBS/NwSim/exercises/omnet/nwsim/results/r_script1.R')
require(omnetpp)
source('~/Dropbox/Studium/Master/EBS/NwSim/exercises/omnet/nwsim/results/r_script1.R')
source('~/Dropbox/Studium/Master/EBS/NwSim/exercises/omnet/nwsim/results/r_script1.R')
source('~/Dropbox/Studium/Master/EBS/NwSim/exercises/omnet/nwsim/results/r_script1.R')
source('~/Dropbox/Studium/Master/EBS/NwSim/exercises/omnet/nwsim/results/r_script1.R')
source('~/Dropbox/Studium/Master/EBS/NwSim/exercises/omnet/nwsim/results/r_script1.R')
source('~/Dropbox/Studium/Master/EBS/NwSim/exercises/omnet/nwsim/results/r_script1.R')
source('~/Dropbox/Studium/Master/EBS/NwSim/exercises/omnet/nwsim/results/r_script1.R')
source('~/Dropbox/Studium/Master/EBS/NwSim/exercises/omnet/nwsim/results/r_script1.R')
R CMD INSTALL omnetpp-resultfiles-master
R CMD INSTALL omnetpp::generateIndexFiles
R CMD INSTALL
require(omnetpp)
source('~/Dropbox/Studium/Master/EBS/car2x/exercise/omnet/veins/examples/flooding/results/r_script.R')
?omnetpp
source('~/Dropbox/Studium/Master/EBS/car2x/exercise/omnet/veins/examples/flooding/results/r_script.R')
source('~/Dropbox/Studium/Master/EBS/NwSim/exercises/omnet/nwsim/results/r_script1.R')
source('~/Dropbox/Studium/Master/EBS/car2x/exercise/omnet/veins/examples/flooding/results/r_script.R')
source('~/Dropbox/Studium/Master/EBS/car2x/exercise/omnet/veins/examples/flooding/results/r_script.R')
source('~/Dropbox/Studium/Master/EBS/car2x/exercise/omnet/veins/examples/flooding/results/r_script.R')
d
source('~/Dropbox/Studium/Master/EBS/car2x/exercise/omnet/veins/examples/flooding/results/r_script.R')
source('~/Dropbox/Studium/Master/EBS/car2x/exercise/omnet/veins/examples/flooding/results/r_script.R')
source('~/Dropbox/Studium/Master/EBS/car2x/exercise/omnet/veins/examples/flooding/results/omnet_helpers.R')
source('~/Dropbox/Studium/Master/EBS/car2x/exercise/omnet/veins/examples/flooding/results/omnet_helpers.R')
source('~/Dropbox/Studium/Master/EBS/car2x/exercise/omnet/veins/examples/flooding/results/r_script.R')
source('~/Dropbox/Studium/Master/EBS/car2x/exercise/omnet/veins/examples/flooding/results/r_script.R')
# require(ggplot2)
mainPath <- "/home/tobias/Documents/ccs/svn/tobias.hardes/thesis/figures/plots/"
mainPathImprovement <- paste(mainPath,"improvement/",sep = "")
mainPathImprovement2 <- paste(mainPath,"improvement2/",sep = "")
mainPathImprovement3 <- paste(mainPath,"improvement3/",sep = "")
mainPathImprovement4 <- paste(mainPath,"improvement4/",sep = "")
defensePath <-"/home/tobias/Documents/ccs/svn/tobias.hardes/defence_thesis/plots/"
setwd('/home/tobias/Documents/ccs/batman-hardes/simulation_omnet/inet/src/batmanadv/results/')
#setwd('/home/tobias/Documents/ccs/sims/sim1/inet/src/batmanadv/results/')     #sim1
measuredVPNRealAll <- c(4860,4323,6231)
measuredVPNRealSend <- c(684,756,792)
measuredVPNRealReceived <- c(4176,3567,5439)
measuredVPNRealSendOpti <- c(701,670,741)
measuredVPNRealReceivedOpti <- c(1858,1752,2379)
nodesBueren <- 139
nodesBali <- 58
nodesPB <- 271
nodesRemainder <- 318
nodeCountvector <- c(nodesBueren,nodesBali,nodesPB,nodesRemainder)
source("omnet_helpers.R")
source("functions.R")
source("analyzeOGMcount.R")
source("nodeGwDistribution.R")
source("PropagationModel.R")
source("delayMeasurement.R")
require("plyr")
require("xts")
require("zoo")
require("scales")
require("chron")
require("reshape2")
require("MASS")
require("agricolae")
require("data.table")
require("grid")
require("gridExtra")
path <- "/home/tobias/Documents/ccs/results/multiRun/cluster/clientAnnouncement/General-"
nodeReachedBueren <- loadDataset(paste(paste(path,0, sep = ""),".sca", sep = ""), add(type="scalar",select="name(#clientCompleteReachedAllNodesBueren)"))
nodeReachedBuerenVector <-nodeReachedBueren$scalars$value
nodeReachedPb <- loadDataset(paste(paste(path,0, sep = ""),".sca", sep = ""), add(type="scalar",select="name(#clientCompleteReachedAllNodesPb)"))
nodeReachedPbVector <-nodeReachedPb$scalars$value
nodeReachedBali <- loadDataset(paste(paste(path,0, sep = ""),".sca", sep = ""), add(type="scalar",select="name(#clientCompleteReachedAllNodesBali)"))
nodeReachedBaliVector <-nodeReachedBali$scalars$value
nodeReachedRemainder <- loadDataset(paste(paste(path,0, sep = ""),".sca", sep = ""), add(type="scalar",select="name(#clientCompleteReachedAllNodesRemainder)"))
nodeReachedRemainderVector <-nodeReachedRemainder$scalars$value
aBueren<- data.table(nodeReachedBuerenVector)
aPb<- data.table(nodeReachedPbVector)
aSchlangen<- data.table(nodeReachedBaliVector)
aRemainder<- data.table(nodeReachedRemainderVector)
path <- "/home/tobias/Documents/ccs/results/multiRun/cluster/clientAnnouncement/General-"
nodeReachedBueren <- loadDataset(paste(paste(path,0, sep = ""),".sca", sep = ""), add(type="scalar",select="name(#clientCompleteReachedAllNodesBueren)"))
nodeReachedBuerenVector <-nodeReachedBueren$scalars$value
nodeReachedPb <- loadDataset(paste(paste(path,0, sep = ""),".sca", sep = ""), add(type="scalar",select="name(#clientCompleteReachedAllNodesPb)"))
nodeReachedPbVector <-nodeReachedPb$scalars$value
nodeReachedBali <- loadDataset(paste(paste(path,0, sep = ""),".sca", sep = ""), add(type="scalar",select="name(#clientCompleteReachedAllNodesBali)"))
nodeReachedBaliVector <-nodeReachedBali$scalars$value
nodeReachedRemainder <- loadDataset(paste(paste(path,0, sep = ""),".sca", sep = ""), add(type="scalar",select="name(#clientCompleteReachedAllNodesRemainder)"))
nodeReachedRemainderVector <-nodeReachedRemainder$scalars$value
aBueren<- data.table(nodeReachedBuerenVector)
aPb<- data.table(nodeReachedPbVector)
aSchlangen<- data.table(nodeReachedBaliVector)
aRemainder<- data.table(nodeReachedRemainderVector)
x <- c(2,3,4,5,6,7,8,9)
for(i in x)
{
nodeReachedBueren <- loadDataset(paste(paste(path,i, sep = ""),".sca", sep = ""), add(type="scalar",select="name(#clientCompleteReachedAllNodesBueren)"))
nodeReachedBuerenVector <-nodeReachedBueren$scalars$value
nodeReachedPb <- loadDataset(paste(paste(path,i, sep = ""),".sca", sep = ""), add(type="scalar",select="name(#clientCompleteReachedAllNodesPb)"))
nodeReachedPbVector <-nodeReachedPb$scalars$value
nodeReachedBali <- loadDataset(paste(paste(path,i, sep = ""),".sca", sep = ""), add(type="scalar",select="name(#clientCompleteReachedAllNodesBali)"))
nodeReachedBaliVector <-nodeReachedBali$scalars$value
nodeReachedRemainder <- loadDataset(paste(paste(path,i, sep = ""),".sca", sep = ""), add(type="scalar",select="name(#clientCompleteReachedAllNodesRemainder)"))
nodeReachedRemainderVector <-nodeReachedRemainder$scalars$value
aBueren<- data.table(aBueren, nodeReachedBuerenVector)
aPb<- data.table(aPb, nodeReachedPbVector)
aSchlangen<- data.table(aSchlangen, nodeReachedBaliVector)
aRemainder<- data.table(aRemainder, nodeReachedRemainderVector)
}
sdmBuren <- apply(aBueren,1,sd)
pffBuren <- rowSums(aBueren)/ncol(aBueren)
errorBuren <- qnorm(0.975)*sdmBueren/sqrt(length(sdmBueren))
errorLowerBuren <- pffBuren - sdmBuren
errorUpperBuren <- pffBuren + sdmBuren
sdmPb <- apply(aPb,1,sd)
pffPb <- rowSums(aPb)/ncol(aPb)
errorPb <- qnorm(0.975)*sdm/sqrt(length(sdmPb))
errorLowerPb <- pffPb - sdmPb
errorUpperPb <- pffPb + sdmPb
sdmBali <- apply(aSchlangen,1,sd)
pffBali <- rowSums(aSchlangen)/ncol(aSchlangen)
errorBali <- qnorm(0.975)*sdmBali/sqrt(length(sdmBali))
errorLowerBali <- pffBali - sdmBali
errorUpperBali <- pffBali + sdmBali
sdmRemainder <- apply(aRemainder,1,sd)
pffRemainder <- rowSums(aRemainder)/ncol(aRemainder)
errorRemainder <- qnorm(0.975)*sdmRemainder/sqrt(length(sdmRemainder))
errorLowerRemainder <- pffRemainder - sdmRemainder
errorUpperRemainder <- pffRemainder + sdmRemainder
df <- rbind(data.frame(value=pffBueren, Legend = 'Bueren'),
data.frame(value=errorLowerBueren, Legend = '95confidenceBueren'),
data.frame(value=errorUpperBueren, Legend = '95confidenceBueren2'),
data.frame(value=pffPb, Legend = 'Pb'),
data.frame(value=errorLowerPb, Legend = '95confidencePb'),
data.frame(value=errorUpperPb, Legend = '95confidencePb2'),
data.frame(value=pffSchlangen, Legend = 'Schlangen'),
data.frame(value=errorLowerSchlangen, Legend = '95confidenceSchlangen'),
data.frame(value=errorUpperSchlangen, Legend = '95confidenceSchlangen2'),
data.frame(value=pffRemainder, Legend = 'Remainder'),
data.frame(value=errorLowerRemainder, Legend = '95confidenceRemainder'),
data.frame(value=errorUpperRemainder, Legend = '95confidenceRemainder2'))
labeling <- c("Bueren","95% confidence Lower Bueren","95% confidence Upper Bueren",
"Paderborn","95% confidence Lower Paderborn","95% confidence Upper Paderborn",
"Schlangen","95% confidence Lower Schlangen","95% confidence Upper Schlangen",
"Remainder","95% confidence Lower Remainder","95% confidence Upper Remainder")
myPlot<-   ggplot(df, aes(x=value, color=factor(Legend)))+stat_ecdf()+
xlab("Number of packets") + ylab("eCDF") +
scale_linetype_manual(breaks=labeling,values=c(7,5,5,7,5,5,7,5,5,7,5))+
scale_color_manual(breaks=labeling, values=c("#377EB8","#999999","#999999","#377EB8","#999999","#999999","#377EB8","#999999","#999999","#377EB8","#999999","#999999"))+
theme_my(base_family = "Palatino") +expand_limits(x=0) + labs(color = "Legend")
myPlot <- myPlot +theme(legend.position = c(0.3, 0.2))
print(myPlot)
path <- "/home/tobias/Documents/ccs/results/localClientDelay/validationNew/cluster/General-0.sca"
path <- "/home/tobias/Documents/ccs/results/multiRun/cluster/nodeAnnouncement/General-2.sca"
path <- "/home/tobias/Documents/ccs/results/multiRun/cluster/nodeAnnouncement/tmp/General-0.sca"
path <- "/home/tobias/Documents/ccs/results/multiRun/cluster/nodeAnnouncement/tmp2/General-0.sca"
path <- "/home/tobias/Documents/ccs/batman-hardes/simulation_omnet/inet/src/batmanadv/results/General-0.sca"
path <- "/home/tobias/Documents/ccs/results/multiRun/cluster/nodeAnnouncement/rlab3Test/General-0.sca"
pathModel <- "/home/tobias/Documents/ccs/results/multiRun/noCluster/nodeAnnouncement/rlab3Test/General-0.sca"
nodeReached <- loadDataset(pathModel, add(type="scalar",select="name(#allNodesKnown)"))
#nodeReached <- loadDataset("/home/tobias/Documents/ccs/results/General-0.sca", add(type="scalar",select="name(#allNodesKnown)"))
nodeReachedVector <-nodeReached$scalars$value
nodeReachedBueren <- loadDataset(path, add(type="scalar",select="name(#allNodesKnownBueren)"))
nodeReachedBuerenVector <-nodeReachedBueren$scalars$value
print(nodeReachedBuerenVector)
path <- "/home/tobias/Documents/ccs/results/localClientDelay/validationNew/cluster/General-0.sca"
path <- "/home/tobias/Documents/ccs/results/multiRun/cluster/nodeAnnouncement/General-2.sca"
path <- "/home/tobias/Documents/ccs/results/multiRun/cluster/nodeAnnouncement/tmp/General-0.sca"
path <- "/home/tobias/Documents/ccs/results/multiRun/cluster/nodeAnnouncement/tmp2/General-0.sca"
path <- "/home/tobias/Documents/ccs/batman-hardes/simulation_omnet/inet/src/batmanadv/results/General-0.sca"
path <- "/home/tobias/Documents/ccs/results/multiRun/cluster/nodeAnnouncement/rlab3Test/General-0.sca"
pathModel <- "/home/tobias/Documents/ccs/results/multiRun/noCluster/nodeAnnouncement/rlab3Test/General-0.sca"
nodeReached <- loadDataset(pathModel, add(type="scalar",select="name(#allNodesKnown)"))
#nodeReached <- loadDataset("/home/tobias/Documents/ccs/results/General-0.sca", add(type="scalar",select="name(#allNodesKnown)"))
nodeReachedVector <-nodeReached$scalars$value
nodeReachedBueren <- loadDataset(path, add(type="scalar",select="name(#allNodesKnownBueren)"))
nodeReachedBuerenVector <-nodeReachedBueren$scalars$value
print(nodeReachedBuerenVector)
nodeReachedPb <- loadDataset(path, add(type="scalar",select="name(#allNodesKnownPb)"))
nodeReachedPbVector <-nodeReachedPb$scalars$value
nodeReachedBali <- loadDataset(path, add(type="scalar",select="name(#allNodesKnownHoevelhofBaliSchlangenMeshID)"))
nodeReachedBaliVector <-nodeReachedBali$scalars$value
nodeReachedRemainder <- loadDataset(path, add(type="scalar",select="name(#allNodesKnownRemainder)"))
nodeReachedRemainderVector <-nodeReachedRemainder$scalars$value
print(nodeReachedRemainderVector)
print(nodeReachedBaliVector)
print(nodeReachedPbVector)
print(nodeReachedBuerenVector)
#path <- "/home/tobias/Documents/ccs/results/localClientDelay/validationNew/General-0.sca"
#nodeReached <- loadDataset(path, add(type="scalar",select="name(#allNodesKnown)"))
##nodeReached <- loadDataset("/home/tobias/Documents/ccs/results/General-0.sca", add(type="scalar",select="name(#allNodesKnown)"))
#nodeReachedVector <-nodeReached$scalars$value
df <- rbind(data.frame(value=nodeReachedBuerenVector, source="Büren (139 Nodes)"),
data.frame(value=nodeReachedBaliVector, source="Schlangen (58 Nodes)"),
data.frame(value=nodeReachedPbVector, source="Paderborn (271 Nodes)"),
data.frame(value=nodeReachedRemainderVector, source="Remainder (318 Nodes)"),
data.frame(value=nodeReachedVector, source="No improvement (779 Nodes)"))
myPlot<-ggplot(df, aes(value, colour = source,linetype = source,size=source)) + stat_ecdf()+  xlab("Time (seconds)") + ylab("eCDF") +
theme_my(base_family = "Palatino") + labs(color = "Legend")+
scale_size_manual(breaks=c("Büren (139 Nodes)","Schlangen (58 Nodes)","Paderborn (271 Nodes)","Remainder (318 Nodes)","No improvement (779 Nodes)"),name="Legend", values=c(1,1,1,1,2))+
#scale_color_manual(breaks=c("Bueren (139)","Schlangen (58)","Paderborn (271)","Remainder (318)"),name="Legend", values=c("#F781BF","#FF7F00","#A65628","#377EB8"))+
scale_color_manual(breaks=c("Büren (139 Nodes)","Schlangen (58 Nodes)","Paderborn (271 Nodes)","Remainder (318 Nodes)","No improvement (779 Nodes)"),name="Legend", values=c("#373737","#696969","#9B9B9B","#CDCDCD","#6E6E6E"))+
scale_linetype_manual(breaks=c("Büren (139 Nodes)","Schlangen (58 Nodes)","Paderborn (271 Nodes)","Remainder (318 Nodes)","No improvement (779 Nodes)"), name="Legend",values=c(1,1,1,1,1))+
theme_my(base_family = "Palatino") +theme(axis.title.y=element_text(vjust=1.5))+  theme(axis.title.x=element_text(vjust=-0.5))+
expand_limits(x=0)#+coord_cartesian(xlim=c(0,80)) #
myPlot<-makePlot(myPlot)
myPlot <- myPlot+theme(legend.position = c(0.2, 0.2))
print(myPlot)
path <- "/home/tobias/Documents/ccs/results/localClientDelay/validationNew/cluster/General-0.sca"
path <- "/home/tobias/Documents/ccs/results/multiRun/cluster/nodeAnnouncement/General-2.sca"
path <- "/home/tobias/Documents/ccs/results/multiRun/cluster/nodeAnnouncement/tmp/General-0.sca"
path <- "/home/tobias/Documents/ccs/results/multiRun/cluster/nodeAnnouncement/tmp2/General-0.sca"
path <- "/home/tobias/Documents/ccs/batman-hardes/simulation_omnet/inet/src/batmanadv/results/General-0.sca"
path <- "/home/tobias/Documents/ccs/results/multiRun/cluster/nodeAnnouncement/rlab3Test/General-0.sca"
pathModel <- "/home/tobias/Documents/ccs/results/multiRun/noCluster/nodeAnnouncement/rlab3Test/General-0.sca"
nodeReached <- loadDataset(pathModel, add(type="scalar",select="name(#allNodesKnown)"))
#nodeReached <- loadDataset("/home/tobias/Documents/ccs/results/General-0.sca", add(type="scalar",select="name(#allNodesKnown)"))
nodeReachedVector <-nodeReached$scalars$value
nodeReachedBueren <- loadDataset(path, add(type="scalar",select="name(#allNodesKnownBueren)"))
nodeReachedBuerenVector <-nodeReachedBueren$scalars$value
print(nodeReachedBuerenVector)
nodeReachedPb <- loadDataset(path, add(type="scalar",select="name(#allNodesKnownPb)"))
nodeReachedPbVector <-nodeReachedPb$scalars$value
nodeReachedBali <- loadDataset(path, add(type="scalar",select="name(#allNodesKnownHoevelhofBaliSchlangenMeshID)"))
nodeReachedBaliVector <-nodeReachedBali$scalars$value
nodeReachedRemainder <- loadDataset(path, add(type="scalar",select="name(#allNodesKnownRemainder)"))
nodeReachedRemainderVector <-nodeReachedRemainder$scalars$value
print(nodeReachedRemainderVector)
print(nodeReachedBaliVector)
print(nodeReachedPbVector)
print(nodeReachedBuerenVector)
#path <- "/home/tobias/Documents/ccs/results/localClientDelay/validationNew/General-0.sca"
#nodeReached <- loadDataset(path, add(type="scalar",select="name(#allNodesKnown)"))
##nodeReached <- loadDataset("/home/tobias/Documents/ccs/results/General-0.sca", add(type="scalar",select="name(#allNodesKnown)"))
#nodeReachedVector <-nodeReached$scalars$value
df <- rbind(data.frame(value=nodeReachedBuerenVector, source="Büren (139 Nodes)"),
data.frame(value=nodeReachedBaliVector, source="Schlangen (58 Nodes)"),
data.frame(value=nodeReachedPbVector, source="Paderborn (271 Nodes)"),
data.frame(value=nodeReachedRemainderVector, source="Remainder (318 Nodes)"),
data.frame(value=nodeReachedVector, source="No improvement (779 Nodes)"))
myPlot<-ggplot(df, aes(value, colour = source,linetype = source,size=source)) + stat_ecdf()+  xlab("Time (seconds)") + ylab("eCDF") +
theme_my(base_family = "Palatino") + labs(color = "Legend")+
scale_size_manual(breaks=c("Büren (139 Nodes)","Schlangen (58 Nodes)","Paderborn (271 Nodes)","Remainder (318 Nodes)","No improvement (779 Nodes)"),name="Legend", values=c(1,1,1,1,2))+
#scale_color_manual(breaks=c("Bueren (139)","Schlangen (58)","Paderborn (271)","Remainder (318)"),name="Legend", values=c("#F781BF","#FF7F00","#A65628","#377EB8"))+
scale_color_manual(breaks=c("Büren (139 Nodes)","Schlangen (58 Nodes)","Paderborn (271 Nodes)","Remainder (318 Nodes)","No improvement (779 Nodes)"),name="Legend", values=c("#373737","#696969","#9B9B9B","#CDCDCD","#6E6E6E"))+
scale_linetype_manual(breaks=c("Büren (139 Nodes)","Schlangen (58 Nodes)","Paderborn (271 Nodes)","Remainder (318 Nodes)","No improvement (779 Nodes)"), name="Legend",values=c(1,1,1,1,1))+
theme_my(base_family = "Palatino") +theme(axis.title.y=element_text(vjust=1.5))+  theme(axis.title.x=element_text(vjust=-0.5))+
expand_limits(x=0)#+coord_cartesian(xlim=c(0,80)) #
myPlot<-makePlot(myPlot)
myPlot <- myPlot+theme(legend.position = c(0.2, 0.2))
print(myPlot)
ggsave(filename=paste(mainPathImprovement,"delayGlobalNodeAnnouncement.pdf", sep = ""), width = 8, height = 5, dpi = 120, plot=myPlot)
